var backspaceCompare = function(s, t) {

    let p1 = s.length - 1, p2 = t.length - 1;
    
    while(p1 >= 0 || p2 >= 0) {    //O(a + b) time
        if(s[p1] === "#" || t[p2] === "#") {
            if(s[p1] === "#") {
                let backCount = 2;
                
                while(backCount > 0) {
                    p1--;
                    backCount--;
                    
                    if(s[p1] === "#") {
                        backCount += 2;
                    }
                }
            }
            
            if(t[p2] === "#") {
                let backCount = 2;
                
                while(backCount > 0) {
                    p2--;
                    backCount--;
                    
                    if(t[p2] === "#") {
                        backCount += 2;
                    }
                }
            }
        } else {
            if(s[p1] !== t[p2]) {
                return false;
            } else {
                p1--;
                p2--;
            }
        }
    }
    
    return true;
    
    //time: O(a + b), space: O(1)
    
    
    
    // Original brute force
    
    function calc(string) {
      let newArr = [];
        for(let i = 0; i < string.length; i++) {
            if(string[i] === "#") {
                newArr.pop();
            } else {
                newArr.push(string[i]);
            }
        }
      return newArr.toString();  //can also do JSON.strigify(newArr). Since you can't compare arrays simply using the === below, have to convert to string
    }
    
    let newS = calc(s);     //Time: O(a), Space: O(a)
    let newT = calc(t);     //Space: O(b), Space: O(b)
    
    if(newS === newT) {
        return true;
    } else {
        return false;
    }
    
};

// Time: O(a + b), Space: O(a + b)
